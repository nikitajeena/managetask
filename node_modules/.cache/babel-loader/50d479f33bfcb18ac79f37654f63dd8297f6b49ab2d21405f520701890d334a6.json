{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\learngraph\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_LOCATIONS = gql`\n  query ExampleQuery($characterId: ID!) {\n    character(id: $characterId) {\n      episode {\n        air_date\n        characters {\n          created\n          episode {\n            created\n            characters {\n              id\n              image\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nfunction DisplayLocations() {\n  _s();\n  // Define the characterId variable and pass it to the useQuery hook\n  const characterId = \"123\"; // Replace with the actual character ID\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_LOCATIONS, {\n    variables: {\n      characterId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n\n  // Ensure that data.character exists before accessing its properties\n  if (!data || !data.character) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No character data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  const character = data.character;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Character Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Air Date: \", character.episode.air_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Related Characters:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), character.episode.characters.map(relatedCharacter => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: relatedCharacter.image,\n        alt: relatedCharacter.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created: \", relatedCharacter.created]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, relatedCharacter.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayLocations, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = DisplayLocations;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My first Apollo app \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayLocations, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"DisplayLocations\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useQuery","gql","jsxDEV","_jsxDEV","GET_LOCATIONS","DisplayLocations","_s","characterId","loading","error","data","variables","children","fileName","_jsxFileName","lineNumber","columnNumber","message","character","episode","air_date","characters","map","relatedCharacter","src","image","alt","id","created","_c","App","_c2","$RefreshReg$"],"sources":["D:/test/learngraph/src/App.js"],"sourcesContent":["import { useQuery, gql } from \"@apollo/client\";\n\nconst GET_LOCATIONS = gql`\n  query ExampleQuery($characterId: ID!) {\n    character(id: $characterId) {\n      episode {\n        air_date\n        characters {\n          created\n          episode {\n            created\n            characters {\n              id\n              image\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction DisplayLocations() {\n  // Define the characterId variable and pass it to the useQuery hook\n  const characterId = \"123\"; // Replace with the actual character ID\n  const { loading, error, data } = useQuery(GET_LOCATIONS, {\n    variables: { characterId },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  // Ensure that data.character exists before accessing its properties\n  if (!data || !data.character) {\n    return <p>No character data found</p>;\n  }\n\n  const character = data.character;\n\n  return (\n    <div>\n      <h1>Character Details</h1>\n      <p>Air Date: {character.episode.air_date}</p>\n      <h2>Related Characters:</h2>\n      {character.episode.characters.map((relatedCharacter) => (\n        <div key={relatedCharacter.id}>\n          <img src={relatedCharacter.image} alt={relatedCharacter.id} />\n          <p>Created: {relatedCharacter.created}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <div>\n      <h2>My first Apollo app ðŸš€</h2>\n      <br />\n      <DisplayLocations />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}