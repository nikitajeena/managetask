{"ast":null,"code":"var _jsxFileName = \"D:\\\\test\\\\learngraph\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_LOCATIONS = gql`\n  query Characters {\n    characters {\n      results {\n        episode {\n          characters {\n            id\n            image\n          }\n        }\n      }\n    }\n  }\n`;\nfunction DisplayLocations() {\n  _s();\n  // Define the characterId variable and pass it to the useQuery hook\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_LOCATIONS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 21\n  }, this);\n  const character = data.characters.results[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: character.map(items => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.episode.characters.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, items.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayLocations, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = DisplayLocations;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My first Apollo app \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayLocations, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"DisplayLocations\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useQuery","gql","jsxDEV","_jsxDEV","GET_LOCATIONS","DisplayLocations","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","message","character","characters","results","map","items","src","episode","image","alt","id","_c","App","_c2","$RefreshReg$"],"sources":["D:/test/learngraph/src/App.js"],"sourcesContent":["import { useQuery, gql } from \"@apollo/client\";\n\nconst GET_LOCATIONS = gql`\n  query Characters {\n    characters {\n      results {\n        episode {\n          characters {\n            id\n            image\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction DisplayLocations() {\n  // Define the characterId variable and pass it to the useQuery hook\n  const { loading, error, data } = useQuery(GET_LOCATIONS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  const character = data.characters.results[0];\n\n  return (\n    <div>\n      {character.map((items) => (\n        <div key={items.id}>\n          <img src={character.episode.characters.image} alt=\"\" />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <div>\n      <h2>My first Apollo app ðŸš€</h2>\n      <br />\n      <DisplayLocations />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGH,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASI,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B;EACA,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAACI,aAAa,CAAC;EAExD,IAAIG,OAAO,EAAE,oBAAOJ,OAAA;IAAAO,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIN,KAAK,EAAE,oBAAOL,OAAA;IAAAO,QAAA,GAAG,SAAO,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE/C,MAAME,SAAS,GAAGP,IAAI,CAACQ,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC;EAE5C,oBACEf,OAAA;IAAAO,QAAA,EACGM,SAAS,CAACG,GAAG,CAAEC,KAAK,iBACnBjB,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAKkB,GAAG,EAAEL,SAAS,CAACM,OAAO,CAACL,UAAU,CAACM,KAAM;QAACC,GAAG,EAAC;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAD/CM,KAAK,CAACK,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACR,EAAA,CAlBQD,gBAAgB;EAAA,QAEUL,QAAQ;AAAA;AAAA0B,EAAA,GAFlCrB,gBAAgB;AAoBzB,eAAe,SAASsB,GAAGA,CAAA,EAAG;EAC5B,oBACExB,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BX,OAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNX,OAAA,CAACE,gBAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAACc,GAAA,GARuBD,GAAG;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}